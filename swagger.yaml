openapi: 3.0.0
info:
  title: Jobs API
  contact: {}
  version: '1.0'
servers:
  - url: https://mmwongo-jobsapi.cyclic.app/api/v1
    variables: {}
paths:
  /jobs:
    get:
      tags:
        - Jobs
      summary: Get All Jobs
      operationId: GetAllJobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    post:
      tags:
        - Jobs
      summary: Create Job
      operationId: CreateJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateJobRequest'
                - example:
                    company: Apple
                    position: Product Manager
                    status: Pending
            example:
              company: Apple
              position: Product Manager
              status: Pending
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
    get:
      tags:
        - Jobs
      summary: Get specific job
      operationId: Getspecificjob
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: 'null'
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    patch:
      tags:
        - Jobs
      summary: Update Specific Job
      operationId: UpdateSpecificJob
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: 'null'
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
              example: {}
            example: {}
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - Jobs
      summary: Delete job
      operationId: Deletejob
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          style: simple
          schema:
            type: string
            example: 'null'
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /auth/users:
    get:
      tags:
        - Jobs
      summary: Get All Users
      operationId: GetAllUsers
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /auth/register:
    post:
      tags:
        - Auth
      summary: Create User
      operationId: CreateUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateUserRequest'
                - example:
                    name: Jack Reacher
                    email: jjreacher1997@gmail.com
                    password: summer1998
            example:
              name: Jack Reacher
              email: jjreacher1997@gmail.com
              password: summer1998
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login User
      operationId: LoginUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/LoginUserRequest'
                - example:
                    email: jjreacher1997@gmail.com
                    password: summer1998
            example:
              email: jjreacher1997@gmail.com
              password: summer1998
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
components:
  schemas:
    CreateJobRequest:
      title: CreateJobRequest
      required:
        - company
        - position
        - status
      type: object
      properties:
        company:
          type: string
        position:
          type: string
        status:
          type: string
      example:
        company: Apple
        position: Product Manager
        status: Pending
    CreateUserRequest:
      title: CreateUserRequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: Jack Reacher
        email: jjreacher1997@gmail.com
        password: summer1998
    LoginUserRequest:
      title: LoginUserRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: jjreacher1997@gmail.com
        password: summer1998
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: Jobs
    description: ''
  - name: Auth
    description: ''
